#include <iostream>
#include <cmath>
#include <ctime>
#include <cstdlib>
#include <conio.h>
#include <unistd.h>
#include <windows.h>
using namespace std;

/*This version of the game does not have a difficulty select screen,
but plays continuously from easy to hard mode if you get a perfect score*/

void MainMenu();                        //Contains the text for the main menu

char MenuFunctions(char option);        //Contains the text for each menu option, returns the user's input

int RunEasyDiff(int score);             //Game information for easy difficulty, returns the user's score

int RunMediumDiff(int score = 0);           //Game information for medium difficulty, return the user's score

int RunHardDiff(int score = 0);             //Game information for hard difficulty, return the user's score

int RunNightmareDiff(int score);        //Game information for a final challenge mode to test skilled users

void FinalScore(int score);              //Responds to how well the user played the game

int main(){

    int i = 0;
    char userInput;
    int loopCheck;
    int playerScore = 0;

    while (i < 1){
        MainMenu();
        cin >> userInput;
        loopCheck = MenuFunctions(userInput);
        system("cls");                                  //This function clears the screen
        if (loopCheck == 'p'){                          //input "p" means user wants to start playing
            playerScore = RunEasyDiff(playerScore);     //Runs easy difficulty
            FinalScore(playerScore);                    //Evaluates the user's performance on Easy difficulty
            if(playerScore >=16){
                playerScore = RunMediumDiff(playerScore);
                FinalScore(playerScore);
                if(playerScore >= 16){
                    playerScore = RunHardDiff(playerScore);
                    FinalScore(playerScore);
                    if (playerScore == 20){
                        cout << "If you think you are so good at this game," << endl;
                        cout << "press ; in the main menu and try NIGHTMARE difficulty!";
                        Sleep(4000);
                        system("cls");
                    }
                }
            }
        }
        if (loopCheck == ';'){
            playerScore = RunNightmareDiff(playerScore);
            FinalScore (playerScore);
        }
        if (loopCheck == 'q'){
            break;
        }
    }
    return 0;
}

void MainMenu(){

    cout << "Welcome to Whack-a-mole!" << endl;
    cout << endl << "MAIN MENU:" << endl;
    cout << "Press j for How to Play:" << endl;
    cout << "Press k for Controls:" << endl;
    cout << "Press p to Play Now:" << endl;
    cout << "Press q to Quit the Game:" << endl;
}

char MenuFunctions(char option){

    char randomInput;

        if (option == 'k'){
            system("cls");          //This function clears the screen of all outputs
            cout << "CONTROLS" << endl << endl;
            cout << "The controls change for each difficulty setting as the levels increase in size." << endl;
            cout << "The keys on the keyboard match the various grid locations used in game." << endl << endl;
            cout << "Easy mode (2x2):" << "\t" << "Q,W,A,S" << endl;
            cout << "Medium mode (3x3):" << "\t" << "Q,W,E,A,S,D,Z,X,C" << endl;
            cout << "Hard mode (4x4):" << "\t" << "1,2,3,4,Q,W,E,R,A,S,D,F,Z,X,C,V." << endl << endl;
            cout << endl << "To continue, press any key and hit ENTER." << endl;
            cin >> randomInput;
            system("cls");
        }
        else if (option =='j'){
            system("cls");
            cout << "HOW TO PLAY" << endl << endl;
            cout << "This is a simple game where you have to whack the mole, represented by a *, by hitting the key" << endl;
            cout << "that corresponds with the mole's location. The mole is very shy, so you have to be quick to whack" << endl;
            cout << "the mole before he disappears. Every time you successfully hit a mole, you gain a point. Try your hardest" << endl;
            cout << "and you just might get a perfect score!" << endl << endl;
            cout << "To continue, press any key and hit ENTER." << endl;
            cin >> randomInput;
            system("cls");
        }
        else if (option == 'p'){
            system("cls");
            cout << "Get ready to whack some moles!" << endl << endl;
            Sleep(2000);
        }
        else if (option == ';'){
            system("cls");
            cout << "Welcome to the NIGHTMARE DIFFICULTY." << endl;
            cout << "Prepare to get DESTROYED."<< endl << endl;
            cout << "The controls of this mode are similar to hard difficulty, but" << endl;
            cout << "there will be more keys for you to use. The exact keys are as follows:" << endl;
            cout << "1,2,3,4,5,6,q,w,e,r,t,y,a,s,d,f,g,h,z,x,c,v,b,n" << endl << endl;
            cout << "Good luck, you are going to need it!" << endl;
            cout << "To start playing, press any key and hit ENTER" << endl;
            cin >> randomInput;
            system("cls");
        }
        else if (option == 'q'){
            cout << endl << "Quitting to windows";
            Sleep(500);
            cout << ".";
            Sleep(500);
            cout << ".";
            Sleep(500);
            cout << ".";
            Sleep(500);
            cout << ".";
        }
        else{
            cout << endl << "That key doesn't do anything!" << endl << endl;
            Sleep(3000);            //This function pauses the program from running for a number of milliseconds
            system("cls");
        }
    return option;
}

int RunEasyDiff(int score){

    char userInput;
    char choice;
    int x, y;
    char temp;
    char myArray[2][2]={{'O','O'},{'O','*'}};
    char myArray2[2][2]={{'O','O'},{'O','O'}};

    for(int i = 0; i < 20; ++i) {       //This loop runs 20 times, giving the user 20 chances to earn points

        srand(time(NULL));
        for (int i=0;i<2;i++) {         //These nested loops randomize the array named myArray
            for (int j=0;j<2;j++) {
                x = rand() % 2;
                y = rand() % 2;
                temp = myArray[i][j];
                myArray[i][j] = myArray[x][y];
                myArray[x][y] = temp;
            }
        }
        cout << "SCORE: " << score << "\t" << "HIT RATIO: " << (score/20.0)*100 << "%" << endl << endl;
        for (int i=0;i<2;i++){          //These loops output myArray, which gives the mole location
            for (int j=0;j<2;j++){
                cout << myArray[i][j]<<" ";
            }
            cout << endl;
        }
        Sleep(1000);
        system("cls");
        cout << "SCORE: " << score << "\t" << "HIT RATIO: " << (score/20.0)*100  << "%" << endl << endl;
        for (int h=0;h<2;h++){          //These loops output myArray2, which is all zeros
            for (int y=0;y<2;y++){
                cout << myArray2[h][y]<<" ";
            }
            cout << endl;
        }
        cout << "Whack a mole: ";
        clock_t start = clock();
        while(!_kbhit() ){
        if (((clock() - start)/CLOCKS_PER_SEC) >= 4){
                cout << "\nTimeout 2" << endl;
             return 0;
            }
        }
        cin >> choice;
        if ((choice == 'q' && myArray[0][0] == '*') || (choice == 'w' && myArray[0][1] == '*') || (choice == 'a' && myArray[1][0] == '*') || (choice == 's' && myArray[1][1] == '*')) {
            score += 1;
            cout << endl << "Nailed him!";
            Sleep(1000);
        }
        else{
            cout << endl << "You missed!" << endl;
            Sleep(1000);
        }
        system("cls");
    }

    return score;
}

int RunMediumDiff(int score){

    char userInput;
    char choice;
    int numRounds = 0;
    int x, y;
    char temp;
    char myArray[4][4]={{'O','O','O'},{'O','*','O'},{'O','O','O'}};
    char myArray2[4][4]={{'O','O','O'},{'O','O','O'},{'O','O','O'}};
    score = 0;

    for (int i = 0; i < 20; ++i) {

        srand(time(NULL));
        for (int i=0;i<3;i++) {
            for (int j=0;j<3;j++) {
                x = rand() % 3;
                y = rand() % 3;
                temp = myArray[i][j];
                myArray[i][j] = myArray[x][y];
                myArray[x][y] = temp;
            }
        }
    cout << "SCORE: " << score << "\t" << "HIT RATIO: " << (score/20.0)*100 << "%" << endl << endl;
    for (int i=0;i<3;i++){
            for (int j=0;j<3;j++){
                cout << myArray[i][j]<<" ";
            }
            cout << endl;
        }
        Sleep(1000);
        system("cls");
        cout << "SCORE: " << score << "\t" << "HIT RATIO: " << (score/20.0)*100 << "%" << endl << endl;
        for (int h=0;h<3;h++){
            for (int y=0;y<3;y++){
                cout << myArray2[h][y]<<" ";
            }
            cout << endl;
        }
        cout << "Whack a mole: ";
        clock_t start = clock();
        while(!_kbhit() ){
        if (((clock() - start)/CLOCKS_PER_SEC) >= 4){
                cout << "\nTimeout 2" << endl;
             return 0;
            }
        }
        cin >> choice;
if ((choice =='q' && myArray[0][0] == '*') ||(choice == 'a' && myArray[1][0] == '*') || (choice == 'w' && myArray[0][1] == '*') || (choice == 's' && myArray[1][1] == '*') || (choice == 'e' && myArray[0][2] == '*') || (choice == 'd' && myArray[1][2] == '*') || (choice == 'c' && myArray[2][2] == '*') || (choice == 'z' && myArray[2][0] == '*') || (choice == 'x' && myArray[2][1] == '*')){            score += 1;
        score += 0;
        cout << endl << "Nailed him!";
        Sleep(1000);
        }
        else{
            cout << "You missed!"<< endl;
            Sleep(1000);
        }
        system("cls");
    }
    return score;
}

int RunHardDiff(int score){

    char userInput;
    char choice;
    int x, y;
    char temp;
    char myArray[4][4]={{'O','O','O','O'},{'O','O','*','O'},{'O','O','O','O'},{'O','O','O','O'}};
    char myArray2[4][4]={{'O','O','O','O'},{'O','O','O','O'},{'O','O','O','O'},{'O','O','O','O'}};
    score = 0;

    for (int i = 0; i < 20; ++i){

        srand(time(NULL));
        for (int i=0;i<4;i++) {
            for (int j=0;j<4;j++) {
                x = rand() % 4;
                y = rand() % 4;
                temp = myArray[i][j];
                myArray[i][j] = myArray[x][y];
                myArray[x][y] = temp;
            }
        }
    cout << "SCORE: " << score << "\t" << "HIT RATIO: " << (score/20.0)*100 << "%" << endl << endl;
    for (int i=0;i<4;i++){
            for (int j=0;j<4;j++){
                cout << myArray[i][j]<<" ";
            }
            cout << endl;
        }
        Sleep(1000);
        system("cls");
        cout << "SCORE: " << score << "\t" << "HIT RATIO: " << (score/20.0)*100 << "%" << endl << endl;
        for (int h=0;h<4;h++){
            for (int y=0;y<4;y++){
                cout << myArray2[h][y]<<" ";
            }
            cout << endl;
        }
        cout << "Whack a mole: ";
        clock_t start = clock();
        while(!_kbhit() ){
        if (((clock() - start)/CLOCKS_PER_SEC) >= 4){
                cout << "\nTimeout 2" << endl;
             return 0;
            }
        }
        cin >> choice;
        if((choice == 'q' && myArray [1][0]== '*') || (choice == 'w' && myArray [1][1]== '*')|| (choice == 'a' && myArray [2][0]== '*') || (choice == 's' && myArray [2][1]== '*') || (choice == 'e' && myArray [1][2]== '*') || (choice =='d' && myArray [2][2]== '*') || (choice == 'c' && myArray [3][2]== '*') || (choice == 'z' && myArray [3][0]== '*') || (choice == 'x' && myArray [3][1]== '*') || (choice =='v' && myArray [3][3]== '*') || (choice =='f' && myArray [2][3]== '*') || (choice == 'r' && myArray [1][3]== '*') || (choice == '1' && myArray [0][0]== '*') || (choice == '2' && myArray [0][1]== '*') || (choice == '3' && myArray [0][2]== '*') || (choice == '4' && myArray [0][3]== '*')){
            score += 1;
            cout << endl << "Nailed him!";
            Sleep(1000);
        }
        else{
            cout << "Oh no, you missed the mole!"<< endl;
            Sleep(1000);
        }
        system("cls");
    }
    return score;
}

int RunNightmareDiff(int score){
    char userInput;
    char choice;
    int x, y;
    char temp;
    char myArray[6][4]={{'O','O','O','O'},{'O','O','*','O'},{'O','O','O','O'},{'O','O','O','O'},{'O','O','O','O'},{'O','O','O','O'}};
    char myArray2[6][4]={{'O','O','O','O'},{'O','O','O','O'},{'O','O','O','O'},{'O','O','O','O'},{'O','O','O','O'},{'O','O','O','O'}};

    for (int i = 0; i < 20; ++i){

        srand(time(NULL));
        for (int i=0;i<4;i++) {
            for (int j=0;j<6;j++) {
                x = rand() % 4;
                y = rand() % 6;
                temp = myArray[i][j];
                myArray[i][j] = myArray[x][y];
                myArray[x][y] = temp;
            }
        }
    cout << "SCORE: " << score << "\t" << "HIT RATIO: " << (score/20.0)*100 << "%" << endl << endl;
    for (int i=0;i<4;i++){
            for (int j=0;j<6;j++){
                cout << myArray[i][j]<<" ";
            }
            cout << endl;
        }
        Sleep(1000);
        system("cls");
        cout << "SCORE: " << score << "\t" << "HIT RATIO: " << (score/20.0)*100 << "%" << endl << endl;
        for (int h=0;h<4;h++){
            for (int y=0;y<6;y++){
                cout << myArray2[h][y]<<" ";
            }
            cout << endl;
        }
        cout << "Whack a mole: ";
        clock_t start = clock();
        while(!_kbhit() ){
        if (((clock() - start)/CLOCKS_PER_SEC) >= 4){
                cout << "\nTimeout 2" << endl;
             return 0;
            }
        }
        cin >> choice;
        if((choice == 'q' && myArray [1][0]== '*') || (choice == 'w' && myArray [1][1]== '*') ||
           (choice == 'a' && myArray [2][0]== '*') || (choice == 's' && myArray [2][1]== '*') ||
           (choice == 'e' && myArray [1][2]== '*') || (choice == 'd' && myArray [2][2]== '*') ||
           (choice == 'c' && myArray [3][2]== '*') || (choice == 'z' && myArray [3][0]== '*') ||
           (choice == 'x' && myArray [3][1]== '*') || (choice =='v' && myArray [3][3]== '*') ||
           (choice =='f' && myArray [2][3]== '*') || (choice == 'r' && myArray [1][3]== '*') ||
           (choice == '1' && myArray [0][0]== '*') || (choice == '2' && myArray [0][1]== '*') ||
           (choice == '3' && myArray [0][2]== '*') || (choice == '4' && myArray [0][3]== '*') ||
           (choice == '5' && myArray [0][4] == '*') || (choice == '6' && myArray [0][5] == '*') ||
           (choice == 't' && myArray[1][4] == '*') || (choice == 'y' && myArray[1][5] == '*') ||
           (choice == 'g' && myArray[2][4] == '*') || (choice == 'h' && myArray[2][5] == '*') ||
           (choice == 'b' && myArray[3][4] == '*') || (choice =='n' && myArray[3][5] == '*')){
            score += 1;
            cout << endl << "Nailed him!";
            Sleep(1000);
        }
        else{
            cout << "Oh no, you missed the mole!"<< endl;
            Sleep(1000);
        }
        system("cls");
    }
    return score;
}

void FinalScore(int score){

    if (score >= 20){
            cout << endl << "Your final score is " << score << " points";
            cout << " and your hitting ratio is " << (score/20.0)*100 << "%" << "." << endl;
            cout << endl << "You must be a genius!" << endl;
            Sleep(5000);
            system("cls");
    }
    else if (score >= 16){
            cout << endl << "Your final score is " << score << " points";
            cout << " and your hitting ratio is " << (score/20.0)*100 << "%"  << "." << endl;
            cout << endl << "You must be a master!" << endl;
            Sleep(5000);
            system("cls");
    }
    else if (score < 16){
            cout << endl << "Your final score is " << score << " points";
            cout << " and your hitting ratio is " << (score/20.0)*100 << "%" << "." << endl;
            cout << endl << "You need to practice more!" << endl;
            Sleep(5000);
            system("cls");
    }
    return;
}
